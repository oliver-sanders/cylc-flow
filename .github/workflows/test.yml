name: test

on: [pull_request]


jobs:
  fast-tests:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
        experimental: [false]
        include:
          - python-version: 3.9
            experimental: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Apt-Get
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck sqlite3

      - name: Install
        run: |
          pip install ."[all]"

      - name: Style
        run: |
          pycodestyle
          flake8
          etc/bin/shellchecker

      - name: Unit Tests
        run: |
          pytest --cov --cov-append -n 5 tests/unit

      - name: Integration Tests
        run: |
          pytest --cov --cov-append -n 5 tests/integration

      - name: Doctests
        run: |
          pytest --cov --cov-append -n 5 cylc/flow

      - name: Coverage
        run: |
          coverage report
          bash <(curl -s https://codecov.io/bash)


  functional-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        python-version: ['3.7']
        tests: [
          ['tests/f', '1/4'],
          ['tests/f', '2/4'],
          ['tests/f', '3/4'],
          ['tests/f', '4/4'],
          ['tests/k', '1/1']
        ]
    env:
      BASE: ${{ matrix.tests[0] }}
      CHUNK: ${{ matrix.tests[1] }}
      CYLC_COVERAGE: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Apt-Get
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3

      - name: Add .github/bin/ to PATH
        # Sets up mocked mail command & any other custom executables
        run: echo "${{ github.workspace }}/.github/bin" >> $GITHUB_PATH

      - name: Install
        run: |
          pip install -e ."[all]"

      - name: Test
        run: |
          # Use non-UTC time zone
          export TZ=XXX-05:30

          if [[ "${BASE}" == 'tests/k' ]]; then
              NPROC=4
          else
              NPROC=8
          fi
          etc/bin/run-functional-tests \
              -j "${NPROC}" --state=save "${BASE}" \
          || (
              echo '=== Re-running Failed Tests ==='
              CHUNK= etc/bin/run-functional-tests \
                  -j "${NPROC}" --state=save,failed
          )

      - name: Debug
        if: failure()
        run: |
          cylc scan
          find "$HOME/cylc-run" -name '*.err' -type f \
              -exec echo '==== {} ====' \; -exec cat '{}' \;
          find "${TMPDIR:-/tmp}/${USER}/cylctb-"* -type f \
              -exec echo '==== {} ====' \; -exec cat '{}' \;

      - name: Upload
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cylc-run
          path: cylc-run

      - name: Coverage
        run: |
          coverage combine
          coverage report
          bash <(curl -s https://codecov.io/bash)
